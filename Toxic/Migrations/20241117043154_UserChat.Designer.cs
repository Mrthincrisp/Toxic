// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Toxic;

#nullable disable

namespace Toxic.Migrations
{
    [DbContext(typeof(ToxicDbContext))]
    [Migration("20241117043154_UserChat")]
    partial class UserChat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Toxic.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Discussions about Movies",
                            Image = "URL",
                            Title = "Movies"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Discussions about Music",
                            Image = "URL",
                            Title = "Music"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Discussions about Video Games",
                            Image = "URL",
                            Title = "Gaming"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Discussions about Books and Literature",
                            Image = "URL",
                            Title = "Books"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Discussions about Tech and Gadgets",
                            Image = "URL",
                            Title = "Technology"
                        });
                });

            modelBuilder.Entity("Toxic.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Chats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "First chat"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Second chat"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Third chat"
                        });
                });

            modelBuilder.Entity("Toxic.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<int>("TopicId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TopicId");

                    b.HasIndex("UserId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "first comment",
                            TopicId = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "second comment",
                            TopicId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Content = "third comment",
                            TopicId = 2,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "fourth comment",
                            TopicId = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "fifth comment",
                            TopicId = 3,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Content = "sixth comment",
                            TopicId = 3,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "seventh comment",
                            TopicId = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            Content = "eighth comment",
                            TopicId = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "ninth comment",
                            TopicId = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            Content = "tenth comment",
                            TopicId = 5,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Toxic.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ChatId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChatId");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ChatId = 1,
                            Content = "first comment",
                            CreatedAt = new DateTime(2024, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            ChatId = 1,
                            Content = "second comment",
                            CreatedAt = new DateTime(2024, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            ChatId = 2,
                            Content = "third comment",
                            CreatedAt = new DateTime(2024, 11, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            ChatId = 2,
                            Content = "fourth comment",
                            CreatedAt = new DateTime(2024, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            ChatId = 3,
                            Content = "fifth comment",
                            CreatedAt = new DateTime(2024, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            ChatId = 3,
                            Content = "sixth comment",
                            CreatedAt = new DateTime(2024, 11, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Toxic.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<int>("CommentId")
                        .HasColumnType("integer");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<string>("Header")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Topics");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CommentId = 0,
                            Content = "What I think about this movie",
                            Header = "Movie Topic one",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CommentId = 0,
                            Content = "Thoughts on another great film",
                            Header = "Movie Topic Two",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CommentId = 0,
                            Content = "Review of a thrilling novel",
                            Header = "Book Topic One",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CommentId = 0,
                            Content = "Discussion on a new album release",
                            Header = "Music Topic One",
                            UserId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CommentId = 0,
                            Content = "Opinions on the latest RPG",
                            Header = "Gaming Topic One",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Toxic.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("text");

                    b.Property<bool>("Admin")
                        .HasColumnType("boolean");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Image")
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "Loves exploring new gadgets and technologies.",
                            Admin = true,
                            Email = "Mrthincrisp@gmail.com",
                            Image = "image.url",
                            Uid = "firebaseidwillgohere123",
                            UserName = "Derek"
                        },
                        new
                        {
                            Id = 2,
                            About = "Avid music lover with a passion for discovering new artists.",
                            Admin = false,
                            Email = "Not_Derek@gmail.com",
                            Image = "image.url",
                            Uid = "anotherfirebaseIdwouldgohere456",
                            UserName = "Not Derek"
                        },
                        new
                        {
                            Id = 3,
                            About = "ur mom",
                            Admin = false,
                            Email = "getSmoked@gmail.com",
                            Image = "image.url",
                            Uid = "fuckyou",
                            UserName = "Pissoff"
                        });
                });

            modelBuilder.Entity("Toxic.Models.UserChat", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("ChatId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "ChatId");

                    b.HasIndex("ChatId");

                    b.ToTable("UserChats");
                });

            modelBuilder.Entity("Toxic.Models.Comment", b =>
                {
                    b.HasOne("Toxic.Models.Topic", "Topic")
                        .WithMany("Comments")
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Toxic.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Toxic.Models.Message", b =>
                {
                    b.HasOne("Toxic.Models.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Toxic.Models.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Toxic.Models.Topic", b =>
                {
                    b.HasOne("Toxic.Models.Category", "Categories")
                        .WithMany("Threads")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Toxic.Models.User", "User")
                        .WithMany("Topic")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Toxic.Models.UserChat", b =>
                {
                    b.HasOne("Toxic.Models.Chat", "Chat")
                        .WithMany("UserChats")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Toxic.Models.User", "User")
                        .WithMany("UserChats")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chat");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Toxic.Models.Category", b =>
                {
                    b.Navigation("Threads");
                });

            modelBuilder.Entity("Toxic.Models.Chat", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("UserChats");
                });

            modelBuilder.Entity("Toxic.Models.Topic", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("Toxic.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Messages");

                    b.Navigation("Topic");

                    b.Navigation("UserChats");
                });
#pragma warning restore 612, 618
        }
    }
}
